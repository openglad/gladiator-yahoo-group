{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":0,"authorName":"Bjørn Hansen","from":"=?iso-8859-1?Q?Bj=F8rn?= Hansen &lt;perfidious@...&gt;","replyTo":"LIST","senderId":"hM5v0uLaZo13uk4NJmGBXRU2W89wNp6FIvJQOCAyOoEQG-uNiIKAUqoIfzKNh9pnTXqcuJ11gkJMUcVSr7rpiXr4fjm5vCm8sCBUbYDy-DX0CHq68E52SjNsLpQnGy1CcA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [gladiator] Gladiator specs, Part 1","postDate":"992470541","msgId":565,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDNCMjdFNjBELjRBNkU4RjdBQHV2aWMuY2E+","referencesHeader":"PDMuMC42LjMyLjIwMDEwNjEzMTU0NDI5LjAwN2YyYjcwQDE5OS4yMzQuMTUyLjY+"},"prevInTopic":564,"nextInTopic":572,"prevInTime":564,"nextInTime":566,"topicId":561,"numMessagesInTopic":4,"msgSnippet":"yea sweet.  good job decoding that file info.  hopefully we can get a little more info about the objects, but it s probably not too hard to get by looking at","rawEmail":"Return-Path: &lt;bhansen@...&gt;\r\nX-Sender: bhansen@...\r\nX-Apparently-To: gladiator@yahoogroups.com\r\nReceived: (EGP: mail-7_1_3); 13 Jun 2001 22:16:02 -0000\r\nReceived: (qmail 97684 invoked from network); 13 Jun 2001 22:16:02 -0000\r\nReceived: from unknown (10.1.10.142) by l10.egroups.com with QMQP; 13 Jun 2001 22:16:02 -0000\r\nReceived: from unknown (HELO cascara.UVic.CA) (142.104.5.28) by mta3 with SMTP; 13 Jun 2001 22:16:00 -0000\r\nReceived: from uvic.ca (248-pm4.hom.alaska.net [209.112.162.248]) by cascara.UVic.CA (8.11.3/8.11.3) with ESMTP id f5DMFvf175198 for &lt;gladiator@yahoogroups.com&gt;; Wed, 13 Jun 2001 15:15:58 -0700\r\nMessage-ID: &lt;3B27E60D.4A6E8F7A@...&gt;\r\nDate: Wed, 13 Jun 2001 14:15:41 -0800\r\nX-Mailer: Mozilla 4.75 [en] (Win98; U)\r\nX-Accept-Language: en\r\nMIME-Version: 1.0\r\nTo: gladiator@yahoogroups.com\r\nSubject: Re: [gladiator] Gladiator specs, Part 1\r\nReferences: &lt;3.0.6.32.20010613154429.007f2b70@199.234.152.6&gt;\r\nContent-Type: text/plain; charset=iso-8859-1\r\nContent-Transfer-Encoding: 8bit\r\nX-eGroups-From: =?iso-8859-1?Q?Bj=F8rn?= Hansen &lt;bhansen@...&gt;\r\nFrom: =?iso-8859-1?Q?Bj=F8rn?= Hansen &lt;perfidious@...&gt;\r\n\r\nyea sweet.  good job decoding that file info.  hopefully we can get a\nlittle more info about the objects, but it&#39;s probably not too hard to\nget by looking at examples.  Order and family I din&#39;t have a clue about\nbut it makes sense now with your example.  So how do you make map tiles\n(ei water, trees, grass, ect.) ?  This file format looks like what&#39;s\nused for object and character placement, but it would be silly to make\nan editor that didn&#39;t change the terrain and map size too.  \n\nI&#39;de like to work with you guys on this, but I don&#39;t have compilers for\nanything but java and C/C++.  Sure visual basic or visual C would\nprobably be nice, but microsoft overcharges for all their junk so. . .\n\nanyway I&#39;ve done stuff in BASIC, C, C++, and Java.  A littile bit with\nvisual basic control creation, and lots of web stuff (HTML, javascript,\nvbscript).  Maybe I should get a little more familiar with my hex\neditor. .  : �\n\nGeorge &#92;&quot;Cookie&#92;&quot; Phillips wrote:\n&gt; \n&gt; Wow. Thanks for the info, dph.\n&gt; \n&gt; And a big thanks to Tom, for providing the documentation.\n&gt; \n&gt; I&#39;m using scen300.fss as my template for analysis, since it&#39;s v8 already.\n&gt; \n&gt; Watch out for big-endian/little-endian problems if you&#39;re used to one or the other.. it took me quite a while to figure out why nothing matched up quite the way I thought it would. ^^;\n&gt; \n&gt; &lt;snip&gt;\n&gt; &gt;    // 1-byte version #\n&gt; This is 0x08 (08h) not &#39;8&#39; in ASCII. We don&#39;t need backwords compatability in this editor, do we? He offered a work-around anyways.\n&gt; \n&gt; Most scenarios will need converted up to v8. Scenario 1, 2, 3, etc... are all v6. Some of them are even v5.\n&gt; \n&gt; I wonder which version began using v8 maps...\n&gt; \n&gt; &gt;    // 8-byte string = grid name to load\n&gt; This apparently has something to do with the internal name of the file;\n&gt; &quot;SCEN0000&quot;, &quot;SCEN0030&quot;, etc..\n&gt; \n&gt; It doesn&#39;t seem to be *that* important, and could probably default to the filename (assuming it&#39;s 8.3)\n&gt; \n&gt; &gt;    // 30-byte scenario title (ver 6+)\n&gt; \n&gt; Standard C String -- null terminated, then padded with garbage to get to the 30th byte.\n&gt; \n&gt; &gt;    // 1-byte char = scenario type, default is 0\n&gt; \n&gt; I guess non-0 is for deathmatch. I&#39;m not gonna bother looking (mainly &#39;cause I dunno where the DM levels are stored. ;))\n&gt; \n&gt; Actually, when I converted scen1.fss to v8, it came up with a &#39;1&#39; rather than a &#39;0&#39;. Odd.\n&gt; \n&gt; &gt;    // 2-bytes par-value, v.8+\n&gt; \n&gt; How fast you&#39;re supposed to complete the level, in hex, it seems. Unsigned, too.\n&gt; \n&gt; &gt;    // 2-bytes (short) = total objects to follow\n&gt; \n&gt; unsigned, or signed? I doubt anyone&#39;s map would even begin to approach THAT many objects... but nonetheless it&#39;s a possibility.\n&gt; \n&gt; &gt;    // List of n objects, each of 7-bytes of form:\n&gt; &gt;           // 1-byte ORDER\n&gt; &gt;           // 1-byte FAMILY\n&gt; \n&gt; ORDER of 0 seems to be a character (either friend or foe):\n&gt; because ORDER 0x00 FAMILY 0x00 is a warrior.. and ORDER 0x00 FAMILY 0x02 is an archer..\n&gt; \n&gt; &gt;           // 2-byte short xpos\n&gt; &gt;           // 2-byte short ypos\n&gt; You said you could make new map-sizes by making blank .pix files and converting them to maps? How large are &#39;average&#39; maps? Is this a pixel-by-pixel thing? Or is it a block-by-block thing?\n&gt; \n&gt; &gt;           // 1-byte TEAM\n&gt; \n&gt; 0x00 is red?\n&gt; 0x01 is blue?\n&gt; 0x02 is yellow?\n&gt; 0x03 is green?\n&gt; 0x04 is purple?\n&gt; \n&gt; ... those are just guesses. Maybe someone&#39;ll be able to figure something out.\n&gt; \n&gt; &gt;           // 1-byte facing\n&gt; 0x01 is north, going clockwise, maybe?\n&gt; &gt;           // 1-byte command\n&gt; ...It&#39;d be nice to get a list of these, too...\n&gt; &gt;           // 1-byte level // 2 bytes in version 7+\n&gt; &gt;           // 12-bytes name\n&gt; Named characters appear in the status window when they die.. thus, it&#39;s probably best if most characters have 0x00 for their first letter of their name and then gibberish for the rest (standard C string)\n&gt; \n&gt; &gt;           // 10 bytes reserved\n&gt; In every map, I think it&#39;s always &quot;MSTRMSTRMS&quot;.. but since it&#39;s reserved (ie; unused) I doubt it&#39;ll matter if that gets changed.\n&gt; \n&gt; &gt;    // 1-byte # of lines of text to load\n&gt; &gt;    // List of n lines of text, each of form:\n&gt; &gt;           // 1-byte character width of line\n&gt; &gt;           // m bytes == characters on this line\n&gt; \n&gt; Simple enough to figure out.\n&gt; \n&gt; Anyone else have any programming thoughts on the matter?\n&gt; \n&gt; -George &quot;Cookie&quot; Phillips\n&gt; Anime News Network\n&gt; Co-Editor-In-Chief\n&gt; http://www.animenewsnetwork.com\n&gt; \n&gt; The Gladiator Mailing List\n&gt; \n&gt; \n&gt; Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/\n\n"}}