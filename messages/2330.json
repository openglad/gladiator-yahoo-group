{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":94713237,"authorName":"alternate_dph","from":"&quot;alternate_dph&quot; &lt;alternate_dph@...&gt;","profile":"alternate_dph","replyTo":"LIST","senderId":"rgO0W-5ghL65HzH_km8NC_FkInDjiT-WGasyG38jixLpl7gISvM1i99Awg9fk73G5VRUd1FZnOWN2nKPQGBJtvDHDoBi6_QgGt0czfdIEF4","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Java Gladiator","postDate":"1203375947","msgId":2330,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGZwZDMwYit0cjFwQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGZwYmdpdit1bzUwQGVHcm91cHMuY29tPg=="},"prevInTopic":2329,"nextInTopic":0,"prevInTime":2329,"nextInTime":2331,"topicId":2319,"numMessagesInTopic":9,"msgSnippet":"Thanks.  That solves a lot of my problems. ... as an individual byte. In the PIX files, the team color is defined as any color above color index 247 (colors","rawEmail":"Return-Path: &lt;alternate_dph@...&gt;\r\nX-Sender: alternate_dph@...\r\nX-Apparently-To: gladiator@yahoogroups.com\r\nX-Received: (qmail 41571 invoked from network); 18 Feb 2008 23:05:48 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m44.grp.scd.yahoo.com with QMQP; 18 Feb 2008 23:05:48 -0000\r\nX-Received: from unknown (HELO n20a.bullet.sp1.yahoo.com) (69.147.64.133)\n  by mta17.grp.scd.yahoo.com with SMTP; 18 Feb 2008 23:05:48 -0000\r\nX-Received: from [216.252.122.219] by n20.bullet.sp1.yahoo.com with NNFMP; 18 Feb 2008 23:05:48 -0000\r\nX-Received: from [66.218.69.1] by t4.bullet.sp1.yahoo.com with NNFMP; 18 Feb 2008 23:05:48 -0000\r\nX-Received: from [66.218.66.85] by t1.bullet.scd.yahoo.com with NNFMP; 18 Feb 2008 23:05:48 -0000\r\nDate: Mon, 18 Feb 2008 23:05:47 -0000\r\nTo: gladiator@yahoogroups.com\r\nMessage-ID: &lt;fpd30b+tr1p@...&gt;\r\nIn-Reply-To: &lt;fpbgiv+uo50@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;alternate_dph&quot; &lt;alternate_dph@...&gt;\r\nSubject: Re: Java Gladiator\r\nX-Yahoo-Group-Post: member; u=94713237; y=VmDkTvU1KrrXybeh92y75wraiVxQbrd1Wh85kh4zQZdL-bGi2jF33Q\r\nX-Yahoo-Profile: alternate_dph\r\n\r\nThanks.  That solves a lot of my problems.\n\n--- In gladiator@...=\r\nm, &quot;Sean Ford&quot; &lt;aglswapbuffers@...&gt; wrote:\n&gt;\n&gt; 1) Gladiator uses a 255 colo=\r\nr palette so each color can be addressed\nas an individual byte. In the PIX =\r\nfiles, the team color is defined as\nany color above color index 247 (colors=\r\n 248-255). Gladiator draws each\n graphic pixel-by-pixel. When it attempts t=\r\no draw a pixel with a color\n247, it will take the team number and use it re=\r\nmap that pixel to the\n proper team color.\n\nI was afraid of that.  I&#39;ve seen=\r\n a lot of examples that create images\nfrom arrays, an approach that looked =\r\na lot more involved than I cared for.\n \n&gt; Openglad is pretty much a direct =\r\nport and uses the same method. If\nyou look at the Openglad source code, the=\r\n walker.cpp source file draws\na single character to the screen at line 982 =\r\n(continuing for about 50\n lines). You will notice that it calls video::walk=\r\nputbuffer(). One of\n the arguments is query_team_color(). The walkputbuffer=\r\n() function is\n located at video.cpp:723. The relevant team color line is: =\r\n         \n if(curcolor &gt; (unsigned char) 247) curcolor =3D (unsigned char)\n=\r\n(teamcolor+(255-curcolor));\n\nSo that&#39;s how it is done.   \n\n&gt; Openglad-e use=\r\ns a little different method. In order to effectively\nuse OpenGL, I can&#39;t dr=\r\naw images pixel-by-pixel. So I handle the team\n colors when I load the imag=\r\ne. On loading, I traverse the image\n pixel-by-pixel and will replace each g=\r\neneric team color with the\n correct color according to the team of the char=\r\nacter I am loading the\n image for.\n\nOh joy.  *stratches head* Keeping memor=\r\ny usage might be tricky then. \nKeeping a single generic version might be ch=\r\neapier on memory\ninitially, but the potential slow down for creating new sp=\r\necific\nimages on the fly as well storing multiple versions of the same imag=\r\ne\nin memory doesn&#39;t sound pleasant.\n \n&gt; 2) The character walk code is handl=\r\ned in walker::walkstep(). It is\n essentially an switch statement that chang=\r\nes the walk amount\naccording to which direction it is facing.\n\nAhh.\n \n&gt; The=\r\n pixien class (parent of walker) handles the current animation\n frame in se=\r\nt_frame(). set_frame() will update the bmp pointer to\npoint to the correct =\r\nframe. Walker will then call set_frame whenever\nit needs a new frame such a=\r\ns when the user changes directions or does\nthe walk animation.\n\nYea, that s=\r\nolves one of my problems.  I figured how to load the images\nbut figuring ou=\r\nt which &#39;part&#39; of the image corresponded to which state\nwas getting perplex=\r\ning.\n \n&gt; 3)\n&gt; Java is not very good in handling binary data :( I recently h=\r\nad to \n process fairly complicated binary files in Java for my research lab=\r\n.\nI wrote an object that extended ByteArrayInputStream and added methods\n&gt; =\r\nlike readUInt32, readSInt16, readNullTerminatedString(), etc that\nlet me gr=\r\nab all the data I needed easily. Those functions all read the\n byte array a=\r\n single byte at a time, but at least that was all\nabstracted. \n\nI found a s=\r\net of code that supposedly is a workaround for not being\nable to read strin=\r\ngs in as a string.  Reading strings in is a big deal\nfor multiple reasons. =\r\n The obvious one is the saved game file.  But\nthere are other advantages.  =\r\nI plan on using my old binary file format\nI created to read in all the map =\r\ntiles in through a loop.  Just read 1\nline of info about the map tile, pull=\r\n out the map tile name, and read\nthe map tile in.  Repeat process for every=\r\n map tile.  Quite efficient.\n Only problem was I never figured out a way to=\r\n systematically read the\nsmoother function as data.  If anyone can figure o=\r\nut a way to rewrite\nthe smoother function rules so that they can be read in=\r\n through a\nbinary file, I would be more than impressed.\n\nThanks a bunch, Se=\r\nan.\n\n\n"}}