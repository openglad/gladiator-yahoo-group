{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":0,"authorName":"Storey","from":"&quot;Storey&quot; &lt;storey@...&gt;","replyTo":"LIST","senderId":"qOQkqTtV4i06WEU-UK_60uE6kt_VWKMSAjxSC3S_aWEUoFvUvu27B36hEHF-y3DNlyMccWvp2dXSoR1NxHkPjxAnPoBw7g","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Attempting to clear the confusion about variables, values and their affect on the game.","postDate":"978609629","msgId":371,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwMmQwMWMwNzY0NSRmMGNmMWNhMCRkMTgwYWRjYkBwZW50aXVtNjAwPg==","referencesHeader":"PEYxNzYzc0VXaUcyQnQxUXByMGIwMDAwYzM2NEBob3RtYWlsLmNvbT4="},"prevInTopic":0,"nextInTopic":372,"prevInTime":370,"nextInTime":372,"topicId":371,"numMessagesInTopic":2,"msgSnippet":"Heya, I just want to try and clear some stuff up :) Chris and Tom Ricket basically gave you the programming reasons as to why your getting the problems, of","rawEmail":"Return-Path: &lt;storey@...&gt;\r\nX-Sender: storey@...\r\nX-Apparently-To: gladiator@egroups.com\r\nReceived: (EGP: mail-6_3_1_3); 4 Jan 2001 11:59:49 -0000\r\nReceived: (qmail 11020 invoked from network); 4 Jan 2001 11:59:49 -0000\r\nReceived: from unknown (10.1.10.26) by l7.egroups.com with QMQP; 4 Jan 2001 11:59:49 -0000\r\nReceived: from unknown (HELO new-smtp2.ihug.com.au) (203.109.250.28) by mta1 with SMTP; 4 Jan 2001 11:59:48 -0000\r\nReceived: from pentium600 (p209-tnt1.syd.ihug.com.au [203.173.128.209]) by new-smtp2.ihug.com.au (8.9.3/8.9.3) with SMTP id WAA31850 for &lt;gladiator@egroups.com&gt;; Thu, 4 Jan 2001 22:59:44 +1100\r\nX-Authentication-Warning: new-smtp2.ihug.com.au: Host p209-tnt1.syd.ihug.com.au [203.173.128.209] claimed to be pentium600\r\nMessage-ID: &lt;002d01c07645$f0cf1ca0$d180adcb@pentium600&gt;\r\nReply-To: &quot;Storey&quot; &lt;storey@...&gt;\r\nTo: &lt;gladiator@egroups.com&gt;\r\nReferences: &lt;F1763sEWiG2Bt1Qpr0b0000c364@...&gt;\r\nSubject: Attempting to clear the confusion about variables, values and their affect on the game.\r\nDate: Thu, 4 Jan 2001 23:00:29 +1100\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 5.00.3018.1300\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.00.3018.1300\r\nFrom: &quot;Storey&quot; &lt;storey@...&gt;\r\n\r\nHeya,\nI just want to try and clear some stuff up :)\n\nChris and Tom Ricket basically gave you the programming reasons as to why\nyour getting the problems, of course if you don&#39;t know anything about\nprogramming it might not have helped much :)\n\nAs Tom Ricket said, the game uses 16-bit variables, which store numbers in a\nrange of -32768 to 32767, assuming they are unsigned (signed values store\nfrom 0 to 65535) - and they probably are.\n\nThis means that if you go over 32767 in some number, it wraps around to it&#39;s\nnegative counterpart, as Chris mentioned.\nWhatever checks the game does might prevent the wrapping, but of course\nthere are holes, and that is, as Chris said, where your negative mana\nnumbers and other things are comming from.\n\nAs for Tom Tildrum explanation of things being overwritten:\n&gt; the problem could be the\n &gt; range of numbers you&#39;re working with. Depending on how much memory the\ncoder\n&gt; wanted to take up with each value, there are a set number of memory\n&gt; locations where the value sits. If it grows larger than the space\nallocated\n&gt; for it, the overflow is discarded.... or if it intrudes on another value\nThis is possible, however not with integers, which is probably what most\nthings are stored in within the game.\nThe case where you&#39;ll get things overwriting others is when you use\ncharacter arrays, or you deal with memory addressing directly (allocating it\nfor data structures or something - I have not done anything like that yet\nthough), if you accidently run over the end of your allocated space in the\narray it will happily run over whatever is in the adjacent memory space, and\nwhen you display it you are likely to get your message, a bundle of garble\nand other junk until the string display routine finds a NULL pointer\n(terminator for the string).  If you happen to exceed the space in an\ninteger you&#39;ll just flip it over the negative numbers.\nAnd yes, things overwriting other things can cause crashes :)\n\nBoth Insanerest and Tom Tildrum mentioned sign bit being flipped, and they\nare right - it gets flipped and you get negatives :)\n\nAs for Insanerest&#39;s explanation of the slime:\n&gt;...large bits used by a slime with such a high level of experience simply\n&gt; have a &quot;0&quot; in the place occupied by the negative/positive binary value.\n&gt; Of course, in front of  that somewhere, there&#39;s a 1, but in that\n&gt; particular place, there&#39;s a 0...\nA 0 in the bit that indicates the sign should give you a positive number,\nyou also won&#39;t find anything in front of it due to the way bits are ordered\n(at least in Intel systems), something like 0000 0000 0000 0000, in binary,\nwill represent a number (I may have the number of bits wrong, I know what\neach means I&#39;m not certain about the number).\nA value of 0000 0000 0000 1111 will give you 15.\nA value of 1000 0000 0000 1111 will give you -15.\nAt least, I think it will, since the sign bit is leftmost.\n\nAnyway I hope that clears up some of the confusion floating around, and I\nwouldn&#39;t worry too much about memory overwriting other memory areas of other\nprograms - windows gives each program a 4GB addressing space (and has\nsafeguards to prevent accidental overwriting - although you can deliberately\nmodify other programs memory), and DOS runs in protected mode, and runs only\none thing at a time :)\n\nIf you want larger numbers you need to move to 32-bit or more variables,\nwhich is basically what everything uses now anyway, they give you numbers\nhovering around +-2 million to play with.\n\nIf I got something wrong - tell the group, I don&#39;t want to have\nmisinformation running around :)\n\nCya&#39;s,\nDeathifier\n- Technology Warrior, www.twarriors.com\n\n\n"}}