{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":62491402,"authorName":"dph_of_rules","from":"&quot;dph_of_rules&quot; &lt;dph_of_rules@...&gt;","profile":"dph_of_rules","replyTo":"LIST","senderId":"EjQLaZDaRcZy3lx5kj7E6JbAr0GZAjJynka7ytT4diNPB9KRYmJPHY2VfZfQ2HY0ATyasDmdI_rHTGKoM4w4ynSKSxarmB5ttVlSOg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"How to delete objects","postDate":"1017443857","msgId":1291,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGE4MnNtaCtpM2VxQGVHcm91cHMuY29tPg=="},"prevInTopic":0,"nextInTopic":0,"prevInTime":1290,"nextInTime":1292,"topicId":1291,"numMessagesInTopic":1,"msgSnippet":"Here s a way to delete objects on a wide scale basis.  I m taking the code from my backup modeule in the scenario editor I am working on. The same principles","rawEmail":"Return-Path: &lt;dph_of_rules@...&gt;\r\nX-Sender: dph_of_rules@...\r\nX-Apparently-To: gladiator@yahoogroups.com\r\nReceived: (EGP: mail-8_0_3_1); 29 Mar 2002 23:17:38 -0000\r\nReceived: (qmail 60831 invoked from network); 29 Mar 2002 23:17:38 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m8.grp.scd.yahoo.com with QMQP; 29 Mar 2002 23:17:38 -0000\r\nReceived: from unknown (HELO n23.grp.scd.yahoo.com) (66.218.66.79)\n  by mta3.grp.scd.yahoo.com with SMTP; 29 Mar 2002 23:17:38 -0000\r\nReceived: from [66.218.67.186] by n23.grp.scd.yahoo.com with NNFMP; 29 Mar 2002 23:17:37 -0000\r\nDate: Fri, 29 Mar 2002 23:17:37 -0000\r\nTo: gladiator@yahoogroups.com\r\nSubject: How to delete objects\r\nMessage-ID: &lt;a82smh+i3eq@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 6275\r\nX-Mailer: Yahoo Groups Message Poster\r\nFrom: &quot;dph_of_rules&quot; &lt;dph_of_rules@...&gt;\r\nX-Yahoo-Group-Post: member; u=62491402\r\nX-Yahoo-Profile: dph_of_rules\r\n\r\nHere&#39;s a way to delete objects on a wide scale basis.  I&#39;m taking the \ncode from my backup modeule in the scenario editor I am working on.  \nThe same principles should apply to all languages:\n\n**some variable declarations located in a different module**\n\nType Objectstruct              &#39;all the information for type of Object\n   bitOrder As Byte            &#39;Order of the object\n   bitFamily As Byte           &#39;Family of the Object\n   intXpos As Integer          &#39;X Position of the Object\n   intYpos As Integer          &#39;Y position of the Object\n   bitTeam As Byte             &#39;Team Number of the Object\n   bitDirection As Byte        &#39;Direction the Object is facing\n   bitCommand As Byte          &#39;Command of the Object\n   intLevel As Integer         &#39;Level number of the Object\n   strName As String * 12      &#39;Name of the Object\n   strReserved As String * 10  &#39;reserved space\nEnd Type\n\nType Datastruct\n    strHeader As String * 3     &#39;Header for the file\n    bitVersion As Byte          &#39;Version Number\n    strGridName As String * 8   &#39;Grid Name for the file\n    strScenTitle As String * 30 &#39;Scenario Title for the file\n    bitScenType As Byte         &#39;Scenario Type for the file\n    intParValue As Integer      &#39;Par Value for the scenario\n    intObjectCount As Integer   &#39;number of objects in the file\n    bitTextLines As Byte        &#39;number of text lines\nEnd Type\n\n**end some variable declarations located in a different module**\n\nThis above part is to help you follow the variable names.\n\n**First part of the code**\n\n&#39;this subroutine makes a backup of an existing scenario file\n&#39;and can be modified to do other things\n&#39;declare variables\nDim intCount, intCounter, intCount2, intCount3 As Integer\nDim bitWidth As Byte\nDim strLine, strFileName, strFileName2 As String\nDim strTemp As String * 1\n\n**end First part of the code\n\nintCount and intCount3 is used for tracking counting numbers\nintCounter is used for keeping track of the byte number in the \noriginal file\nintCount3 is used for keeping track of the byte number in the new file\nstrFileName is the filename of the original file\nstrFileName2 is the filename of the new file\n\nI am skipping over how you assign values to the strFileName, and \nstrFileName2 since that is irrelevant\n\n**2nd part of the code**\n\n&#39;open files\nOpen strFileName For Binary As #1\nOpen strFileName2 For Binary As #2\n\n&#39;process the header information 1st\nGet #1, 1, Filestruc.strHeader\nPut #2, 1, Filestruc.strHeader\nGet #1, 4, Filestruc.bitVersion\nPut #2, 4, Filestruc.bitVersion\nGet #1, 5, Filestruc.strGridName\nPut #2, 5, Filestruc.strGridName\nGet #1, 13, Filestruc.strScenTitle\nPut #2, 13, Filestruc.strScenTitle\nGet #1, 43, Filestruc.bitScenType\nPut #2, 43, Filestruc.bitScenType\nGet #1, 44, Filestruc.intParValue\nPut #2, 44, Filestruc.intParValue\nGet #1, 46, Filestruc.intObjectCount\nPut #2, 46, Filestruc.intObjectCount\n\n**end 2nd part of code**\n\nGet is used to retrieve information from a file.\nPut is used to insert information into a file.\nstrFileName becomes file &quot;#1&quot;.  strFileName2 becomes file &quot;#2&quot;.\nThe numbers after that refer to the byte number where the information \nis located.  The variable names that I am assigning values to should \nbe fairly obvious.\n\n**3rd part of code**\n\nReDim strucThings(1 To Filestruc.intObjectCount) As Objectstruct\n&#39;start keeping track of byte number\nintCounter = 48\nintCount3 = intCounter\n&#39;process the objects next\nFor intCount = 1 To Filestruc.intObjectCount\n&#39;read the information first\nGet #1, intCounter, strucThings(intCount).bitOrder\n\nGet #1, intCounter + 1, strucThings(intCount).bitFamily\n\nGet #1, intCounter + 2, strucThings(intCount).intXpos\n\nGet #1, intCounter + 4, strucThings(intCount).intYpos\n\nGet #1, intCounter + 6, strucThings(intCount).bitTeam\n\nGet #1, intCounter + 7, strucThings(intCount).bitDirection\n\nGet #1, intCounter + 8, strucThings(intCount).bitCommand\n\nGet #1, intCounter + 9, strucThings(intCount).intLevel\n\nGet #1, intCounter + 11, strucThings(intCount).strName\n\nGet #1, intCounter + 23, strucThings(intCount).strReserved\n\n\nIf strucThings(intCount).bitTeam = 5 Then\n&#39;these are the objects I want to delete\nFilestruc.intObjectCount = Filestruc.intObjectCount - 1\n&#39;decrease the object count by 1\nPut #2, 46, Filestruc.intObjectCount\n&#39;update the scenario file to have the correct object count\nElse\n&#39;print out the information\nPut #2, intCount3, strucThings(intCount).bitOrder\nPut #2, intCount3 + 1, strucThings(intCount).bitFamily\nPut #2, intCount3 + 2, strucThings(intCount).intXpos\nPut #2, intCount3 + 4, strucThings(intCount).intYpos\nPut #2, intCount3 + 6, strucThings(intCount).bitTeam\nPut #2, intCount3 + 7, strucThings(intCount).bitDirection\nPut #2, intCount3 + 8, strucThings(intCount).bitCommand\nPut #2, intCount3 + 9, strucThings(intCount).intLevel\nPut #2, intCount3 + 11, strucThings(intCount).strName\nPut #2, intCount3 + 23, strucThings(intCount).strReserved\n&#39;update the byte number in the 2nd file\nintCount3 = intCount3 + 33\nEnd If\n\n&#39;update the byte number in the 1st file\nintCounter = intCounter + 33\nNext intCount\n\n**end 3rd part of the code**\n\nVariable names should be fairly obvious.  Once I get to the point of \ndeleting objects, what byte number I am working on for each file \nbecomes different.  Also, the next section is important.\n\n**4th part of the code**\n&#39;read and copy the number of text lines\nGet #1, intCounter, Filestruc.bitTextLines\nPut #2, intCount3, Filestruc.bitTextLines\n\n&#39;read and copy the text lines\n\n&#39;update the location of the byte number I am using\nintCounter = intCounter + 1\nintCount3 = intCount3 + 1\nFor intCount = 1 To Filestruc.bitTextLines\n&#39;read and copy the length of the line\nGet #1, intCounter, bitWidth\nPut #2, intCount3, bitWidth\n&#39;read and copy the text line\nFor intCount2 = 1 To bitWidth\nGet #1, intCounter + intCount2, strTemp\nPut #2, intCount3 + intCount2, strTemp\n\nNext intCount2\n&#39;update the byte number for both files\nintCounter = intCounter + 1 + bitWidth\nintCount3 = intCount3 + 1 + bitWidth\nNext intCount\nClose #2\nClose #1\n\n**end 4th part of the code**\n\nOk, the way I copy the text lines probably isn&#39;t the most elegant \nsolution, but it works.  Obviously, not all my code is listed because \nnot all of it is important for this information.\n\nHopefully the documentation should be enough.  If not, I&#39;ll answer \nquestions.\n\n\n"}}